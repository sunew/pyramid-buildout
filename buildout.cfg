[buildout]
extensions += 
    mr.developer
    buildout.umask

umask = 002
# avoid common egg cache for this project
eggs-directory = ${buildout:directory}/eggs

# todo: a normal versions.cfg?
extends = 
    pinned_versions.cfg
versions = versions
show-picked-versions = true
update-versions-file = pinned_versions.cfg

unzip = true
newest = false

parts =
    pyramid
    eggdeps
    ipy
    yolk
    test

eggs =
    ZopeSkel

develop = 

allow-hosts =
    *.python.org

always-checkout = force
sources-dir = mr-developer-src
auto-checkout =

[sources]
# Examples:
# collective.cachepurger  = svn https://svn.headnet.dk/shiny/collective.cachepurger/trunk/
# collective.cachepurger  = svn https://svn.headnet.dk/shiny/collective.cachepurger/trunk/@123
# Plone                   = git ${remotes:plone}/Plone.git branch=4.1
# Plone                   = git ${remotes:plone}/Plone.git rev=TAG
#
# Example with pushurl - needed to be able to check out read only by non-collective user (a machine user). 
# collective.pfgpreview       = git ${remotes:collective}/collective.pfgpreview.git pushurl=${remotes:collective_push}/collective.pfgpreview.git


[pyramid]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    pyramid
#    myproject
interpreter = py

[eggdeps]
recipe = zc.recipe.egg
eggs = tl.eggdeps
       ${buildout:eggs}
       ${pyramid:eggs}
scripts = eggdeps


[ipy]
# a IPython Shell for interactive use with the eggs from your buildout available
recipe = zc.recipe.egg
eggs =
       ipython
       ${buildout:eggs}
       ${pyramid:eggs}
initialization =
        import sys, os
        # buildout is contained in a virtualenv:
        os.environ["IPYTHONDIR"] = "${buildout:directory}/../.ipython"
scripts = ipython=ipy


[yolk]
recipe = zc.recipe.egg
eggs =
       yolk
       ${buildout:eggs}
       ${pyramid:eggs}
initialization = import os; os.environ['HOME']='${buildout:directory}'
scripts = yolk


[test]
recipe = zc.recipe.testrunner
eggs =
       ${buildout:eggs}
       ${pyramid:eggs}


